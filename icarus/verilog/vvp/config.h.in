#ifndef __config_H
#define __config_H
/*
 * Copyright (c) 2001-2008 Stephen Williams (steve@icarus.com)
 *
 *    This source code is free software; you can redistribute it
 *    and/or modify it in source code form under the terms of the GNU
 *    General Public License as published by the Free Software
 *    Foundation; either version 2 of the License, or (at your option)
 *    any later version.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    GNU General Public License for more details.
 *
 *    You should have received a copy of the GNU General Public License
 *    along with this program; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA
 */

#if defined(__cplusplus)
#  if !defined(__GNUC__)
     using namespace std;
#  elif (__GNUC__ == 3)
     using namespace std;
#  endif
#endif

# define SIZEOF_UNSIGNED_LONG_LONG 0
#ifndef SIZEOF_UNSIGNED_LONG
# define SIZEOF_UNSIGNED_LONG 0
#endif
# define SIZEOF_UNSIGNED 0

# undef NEED_LU
# undef NEED_TU
# undef WLU
# undef WTU
# undef HAVE_IOSFWD
# undef HAVE_DLFCN_H
# undef HAVE_DL_H
# undef HAVE_GETOPT_H
# undef HAVE_MALLOC_H
# undef HAVE_LIBREADLINE
# undef HAVE_READLINE_READLINE_H
# undef HAVE_READLINE_HISTORY_H
# undef HAVE_INTTYPES_H
# undef HAVE_LROUND
# undef HAVE_NAN

/* Figure if I can use readline. */
#undef USE_READLINE
#ifdef HAVE_LIBREADLINE
#ifdef HAVE_READLINE_READLINE_H
# define USE_READLINE
#endif
#endif

#ifndef MODULE_DIR
# define MODULE_DIR "."
#endif

#ifdef HAVE_INTTYPES_H
# include  <inttypes.h>
#endif

#if SIZEOF_UNSIGNED >= 8
typedef unsigned vvp_time64_t;
# define TIME_FMT ""
#else
# if SIZEOF_UNSIGNED_LONG >= 8
typedef unsigned long vvp_time64_t;
#  define UL_AND_TIME64_SAME
#  define TIME_FMT "l"
# else
#  if SIZEOF_UNSIGNED_LONG_LONG > SIZEOF_UNSIGNED_LONG
typedef unsigned long long vvp_time64_t;
#   define TIME_FMT "ll"
#  else
typedef unsigned long vvp_time64_t;
#   define UL_AND_TIME64_SAME
#   define TIME_FMT "l"
#  endif
# endif
#endif

# include  <math.h>

/* getrusage, /proc/self/statm */

# undef HAVE_SYS_RESOURCE_H
# undef LINUX

#if !defined(HAVE_LROUND)
#if defined(__cplusplus)
extern "C" long lround(double x);
#else
extern long lround(double x);
#endif
#endif

#if !defined(HAVE_NAN)
# define nan(x) (NAN)
#endif

#if !defined(INFINITY)
# define INFINITY HUGE_VAL
#endif

/*
 * When doing dynamic linking, we need a uniform way to identify the
 * symbol. Some compilers put leading _, some trailing _. The
 * configure script figures out which is the local convention and
 * defines NEED_LU and NEED_TU as required.
 */
#ifdef NEED_LU
#define LU "_"
#else
#define LU ""
#endif

#ifdef NEED_TU
#define TU "_"
#else
#define TU ""
#endif

#endif
